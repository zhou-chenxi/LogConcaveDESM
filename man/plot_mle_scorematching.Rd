% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_mle_scorematching.R
\name{plot_mle_scorematching}
\alias{plot_mle_scorematching}
\title{Plotting the Log-concave Maximum Likelihood and Score Matching Density Estimates}
\usage{
plot_mle_scorematching(
  scorematching_logconcave,
  plot_domain,
  smoothed = FALSE,
  plot_log = FALSE,
  plot_points_cnt = 100,
  minus_const = 0,
  plot_hist = FALSE,
  hist_binwidth = NULL,
  hist_alpha = 0.2
)
}
\arguments{
\item{scorematching_logconcave}{An object of class "LogConcaveDESM",
usually the output of \code{\link{lcd_scorematching}} or \code{\link{cv_optimal_density_estimate}}.}

\item{plot_domain}{A numeric vector to indicate the domain of the plot.}

\item{smoothed}{A logical value to indicate whether to compute the smoothed log-concave maximum
likelihood density estimate. Default is \code{FALSE}.}

\item{plot_log}{A logical value to indicate whether to plot the density estimate in the log scale.
Default is \code{FALSE}.}

\item{plot_points_cnt}{A numeric to indicate the number of points for evaluating and plotting.
Default is \code{100}.}

\item{minus_const}{A numeric to be subtracted in the exponent to
ensure the finite-ness of the integration result. Default is \code{0}.}

\item{plot_hist}{A logical value to indicate whether to the histogram. Default is \code{FALSE}.}

\item{hist_binwidth}{A numeric to indicate the bin width parameter in plotting the histogram;
only works when \code{plot_hist == TRUE}. Default is \code{NULL}, under which condition
the Freedman-Diaconis rule is used.}

\item{hist_alpha}{A numeric to indicate the opacity in plotting the histogram;
must range from 0 to 1, inclusively; only works when \code{plot_hist == TRUE}.
Default is \code{0.2}.}
}
\value{
A ggplot2 plot of the log-concave maximum likelihood and (penalized) score matching
density estimates over the specified \code{plot_domain}.
}
\description{
Plots the log-concave maximum likelihood and (penalized) score matching density estimates together.
}
\examples{
set.seed(1119)
N <- 100
data <- rnorm(N)
domain <- c(-5, 5)
result <- lcd_scorematching(data, domain, penalty_param = 1e-1)

plot_mle_scorematching(result, result$domain, plot_points_cnt = 500,
plot_hist = TRUE)

}
\seealso{
\href{https://cran.r-project.org/web/packages/logcondens/index.html}{logcondens}
}
