geom_segment(aes(x = x_pos[3], y = 0, xend = x_pos[3], yend = y_pos[3]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[4], y = 0, xend = x_pos[4], yend = y_pos[4]),
linetype = 'dashed', size = 0.2) +
annotate('text', x = x_neg[1], y = -0.025, label = latex2exp::TeX(r'($a$)')) +
annotate('text', x = x_neg[1] - 0.07, y = y_neg[1] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_0$)')) +
annotate('text', x = x_neg[2], y = -0.025, label = latex2exp::TeX(r'($X_{(1)}$)')) +
annotate('text', x = x_neg[2], y = y_neg[2] + 0.05, label = latex2exp::TeX(r'($\hat{\theta}_1$)')) +
annotate('text', x = x_neg[3], y = -0.025, label = latex2exp::TeX(r'($X_{(2)}$)')) +
annotate('text', x = x_neg[3] + 0.1, y = y_neg[3] - 0.02, label = latex2exp::TeX(r'($\hat{\theta}_2$)')) +
annotate('text', x = x_pos[2], y = -0.025, label = latex2exp::TeX(r'($X_{(m-1)}$)')) +
annotate('text', x = x_pos[2] - 0.1, y = y_pos[2] - 0.02, label = latex2exp::TeX(r'($\hat{\theta}_{m-1}$)')) +
annotate('text', x = x_pos[3], y = -0.025, label = latex2exp::TeX(r'($X_{(m)}$)')) +
annotate('text', x = x_pos[3], y = y_pos[3] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_m$)')) +
annotate('text', x = x_pos[4], y = -0.025, label = latex2exp::TeX(r'($b$)')) +
annotate('text', x = x_pos[4] - 0.2, y = y_pos[4] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_{m+1}$)'))
plot
plot <- ggplot() +
geom_line(data = df_neg, mapping = aes(x = x_neg, y = y_neg), size = 0.7) +
geom_line(data = df_pos, mapping = aes(x = x_pos, y = y_pos), size = 0.7) +
geom_point(data = df_neg[1:(nrow(df_neg) - 1), ],
mapping = aes(x = df_neg[1:(nrow(df_neg) - 1), 'xneg'],
y = df_neg[1:(nrow(df_neg) - 1), 'yneg']),
size = 1.5) +
geom_point(data = df_neg[2:nrow(df_pos), ],
mapping = aes(x = df_pos[2:nrow(df_pos), 'xpos'],
y = df_pos[2:nrow(df_pos), 'ypos']),
size = 1.5) +
annotate("text", x = c(-1, 0, 1), y = 0.4, label = "...", size = 10) +
theme_bw() +
geom_hline(yintercept = 0, size = 1.2) +
annotate("text", x = 0, y = 0.025, label = "y = 0") +
labs(x = 'x', y = latex2exp::TeX(r"($\hat{g''}$)")) +
lims(x = c(-3.6, 3.6), y = c(-0.03, 0.7)) +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
# axis.line = element_line(colour = "black")
) +
geom_segment(aes(x = x_neg[1], y = 0, xend = x_neg[1], yend = y_neg[1]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_neg[2], y = 0, xend = x_neg[2], yend = y_neg[2]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_neg[3], y = 0, xend = x_neg[3], yend = y_neg[3]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[2], y = 0, xend = x_pos[2], yend = y_pos[2]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[3], y = 0, xend = x_pos[3], yend = y_pos[3]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[4], y = 0, xend = x_pos[4], yend = y_pos[4]),
linetype = 'dashed', size = 0.2) +
annotate('text', x = x_neg[1], y = -0.025, label = latex2exp::TeX(r'($a$)')) +
annotate('text', x = x_neg[1] - 0.07, y = y_neg[1] + 0.02, label = latex2exp::TeX(r'($\hat{\theta}_0$)')) +
annotate('text', x = x_neg[2], y = -0.025, label = latex2exp::TeX(r'($X_{(1)}$)')) +
annotate('text', x = x_neg[2], y = y_neg[2] + 0.05, label = latex2exp::TeX(r'($\hat{\theta}_1$)')) +
annotate('text', x = x_neg[3], y = -0.025, label = latex2exp::TeX(r'($X_{(2)}$)')) +
annotate('text', x = x_neg[3] + 0.1, y = y_neg[3] - 0.02, label = latex2exp::TeX(r'($\hat{\theta}_2$)')) +
annotate('text', x = x_pos[2], y = -0.025, label = latex2exp::TeX(r'($X_{(m-1)}$)')) +
annotate('text', x = x_pos[2] - 0.1, y = y_pos[2] - 0.02, label = latex2exp::TeX(r'($\hat{\theta}_{m-1}$)')) +
annotate('text', x = x_pos[3], y = -0.025, label = latex2exp::TeX(r'($X_{(m)}$)')) +
annotate('text', x = x_pos[3], y = y_pos[3] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_m$)')) +
annotate('text', x = x_pos[4], y = -0.025, label = latex2exp::TeX(r'($b$)')) +
annotate('text', x = x_pos[4] - 0.2, y = y_pos[4] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_{m+1}$)'))
plot
plot <- ggplot() +
geom_line(data = df_neg, mapping = aes(x = x_neg, y = y_neg), size = 0.7) +
geom_line(data = df_pos, mapping = aes(x = x_pos, y = y_pos), size = 0.7) +
geom_point(data = df_neg[1:(nrow(df_neg) - 1), ],
mapping = aes(x = df_neg[1:(nrow(df_neg) - 1), 'xneg'],
y = df_neg[1:(nrow(df_neg) - 1), 'yneg']),
size = 1.5) +
geom_point(data = df_neg[2:nrow(df_pos), ],
mapping = aes(x = df_pos[2:nrow(df_pos), 'xpos'],
y = df_pos[2:nrow(df_pos), 'ypos']),
size = 1.5) +
annotate("text", x = c(-1, 0, 1), y = 0.4, label = "...", size = 10) +
theme_bw() +
geom_hline(yintercept = 0, size = 1.2) +
annotate("text", x = 0, y = 0.025, label = "y = 0") +
labs(x = 'x', y = latex2exp::TeX(r"($\hat{g''}$)")) +
lims(x = c(-3.6, 3.6), y = c(-0.03, 0.7)) +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
# axis.line = element_line(colour = "black")
) +
geom_segment(aes(x = x_neg[1], y = 0, xend = x_neg[1], yend = y_neg[1]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_neg[2], y = 0, xend = x_neg[2], yend = y_neg[2]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_neg[3], y = 0, xend = x_neg[3], yend = y_neg[3]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[2], y = 0, xend = x_pos[2], yend = y_pos[2]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[3], y = 0, xend = x_pos[3], yend = y_pos[3]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[4], y = 0, xend = x_pos[4], yend = y_pos[4]),
linetype = 'dashed', size = 0.2) +
annotate('text', x = x_neg[1], y = -0.025, label = latex2exp::TeX(r'($a$)')) +
annotate('text', x = x_neg[1] - 0.07, y = y_neg[1] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_0$)')) +
annotate('text', x = x_neg[2], y = -0.025, label = latex2exp::TeX(r'($X_{(1)}$)')) +
annotate('text', x = x_neg[2], y = y_neg[2] + 0.05, label = latex2exp::TeX(r'($\hat{\theta}_1$)')) +
annotate('text', x = x_neg[3], y = -0.025, label = latex2exp::TeX(r'($X_{(2)}$)')) +
annotate('text', x = x_neg[3] + 0.1, y = y_neg[3] - 0.02, label = latex2exp::TeX(r'($\hat{\theta}_2$)')) +
annotate('text', x = x_pos[2], y = -0.025, label = latex2exp::TeX(r'($X_{(m-1)}$)')) +
annotate('text', x = x_pos[2] - 0.1, y = y_pos[2] - 0.02, label = latex2exp::TeX(r'($\hat{\theta}_{m-1}$)')) +
annotate('text', x = x_pos[3], y = -0.025, label = latex2exp::TeX(r'($X_{(m)}$)')) +
annotate('text', x = x_pos[3], y = y_pos[3] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_m$)')) +
annotate('text', x = x_pos[4], y = -0.025, label = latex2exp::TeX(r'($b$)')) +
annotate('text', x = x_pos[4] - 0.2, y = y_pos[4] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_{m+1}$)'))
plot
plot <- ggplot() +
geom_line(data = df_neg, mapping = aes(x = x_neg, y = y_neg), size = 0.7) +
geom_line(data = df_pos, mapping = aes(x = x_pos, y = y_pos), size = 0.7) +
geom_point(data = df_neg[1:(nrow(df_neg) - 1), ],
mapping = aes(x = df_neg[1:(nrow(df_neg) - 1), 'xneg'],
y = df_neg[1:(nrow(df_neg) - 1), 'yneg']),
size = 1.5) +
geom_point(data = df_neg[2:nrow(df_pos), ],
mapping = aes(x = df_pos[2:nrow(df_pos), 'xpos'],
y = df_pos[2:nrow(df_pos), 'ypos']),
size = 1.5) +
annotate("text", x = c(-1, 0, 1), y = 0.4, label = "...", size = 10) +
theme_bw() +
geom_hline(yintercept = 0, size = 1.2) +
annotate("text", x = 0, y = 0.025, label = "y = 0") +
labs(x = 'x', y = latex2exp::TeX(r"($\hat{g''}$)")) +
lims(x = c(-3.6, 3.6), y = c(-0.03, 0.7)) +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
# panel.grid.major = element_blank(),
# panel.grid.minor = element_blank(),
# panel.background = element_blank(),
# axis.line = element_line(colour = "black")
) +
geom_segment(aes(x = x_neg[1], y = 0, xend = x_neg[1], yend = y_neg[1]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_neg[2], y = 0, xend = x_neg[2], yend = y_neg[2]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_neg[3], y = 0, xend = x_neg[3], yend = y_neg[3]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[2], y = 0, xend = x_pos[2], yend = y_pos[2]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[3], y = 0, xend = x_pos[3], yend = y_pos[3]),
linetype = 'dashed', size = 0.2) +
geom_segment(aes(x = x_pos[4], y = 0, xend = x_pos[4], yend = y_pos[4]),
linetype = 'dashed', size = 0.2) +
annotate('text', x = x_neg[1], y = -0.025, label = latex2exp::TeX(r'($a$)')) +
annotate('text', x = x_neg[1] - 0.07, y = y_neg[1] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_0$)')) +
annotate('text', x = x_neg[2], y = -0.025, label = latex2exp::TeX(r'($X_{(1)}$)')) +
annotate('text', x = x_neg[2], y = y_neg[2] + 0.03, label = latex2exp::TeX(r'($\hat{\theta}_1$)')) +
annotate('text', x = x_neg[3], y = -0.025, label = latex2exp::TeX(r'($X_{(2)}$)')) +
annotate('text', x = x_neg[3] + 0.1, y = y_neg[3] - 0.02, label = latex2exp::TeX(r'($\hat{\theta}_2$)')) +
annotate('text', x = x_pos[2], y = -0.025, label = latex2exp::TeX(r'($X_{(m-1)}$)')) +
annotate('text', x = x_pos[2] - 0.1, y = y_pos[2] - 0.02, label = latex2exp::TeX(r'($\hat{\theta}_{m-1}$)')) +
annotate('text', x = x_pos[3], y = -0.025, label = latex2exp::TeX(r'($X_{(m)}$)')) +
annotate('text', x = x_pos[3], y = y_pos[3] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_m$)')) +
annotate('text', x = x_pos[4], y = -0.025, label = latex2exp::TeX(r'($b$)')) +
annotate('text', x = x_pos[4] - 0.2, y = y_pos[4] + 0.04, label = latex2exp::TeX(r'($\hat{\theta}_{m+1}$)'))
plot
library(LogConcaveDESM, warn.conflicts = FALSE)
library(patchwork)
library(ggplot2)
set.seed(1119)
plot_list <- list()
domain <- c(-5, 5)
y_lim <- c(-0.01, 1.0)
data <- seq(domain[1] + 0.2, domain[2] - 0.2, by = 0.2)
result1 <- lcd_scorematching(
data = data,
domain = domain,
penalty_param = 0,
verbose = TRUE
)
plot_den <- plot_density(
scorematching_logconcave = result1,
plot_domain = domain,
plot_points_cnt = 500) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim)
plot_den
hist_binwidth <- 2 * stats::IQR(data) / (length(data) ** (1/3))
plot_den <- plot_density(
scorematching_logconcave = result1,
plot_domain = domain,
plot_points_cnt = 500) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_den
plot_list[['original']] <- plot_den
# --------------------------------------------------------------------------------------------------
add_pt <- 0.01
new_data <- c(data, add_pt, -add_pt)
result2 <- lcd_scorematching(
data = new_data,
domain = domain,
penalty_param = 0,
verbose = TRUE
)
plot_den_new <- plot_density(
scorematching_logconcave = result2,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE)
plot_den_new
hist_binwidth <- 2 * stats::IQR(new_data) / (length(new_data) ** (1/3))
plot_den_new <- plot_density(
scorematching_logconcave = result2,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_den_new
plot_list[[paste0("add", add_pt, "unpenalized")]] <- plot_den_new
lambda_cand <- exp(seq(-5, 1, by = 0.5))
opt_den <- cv_optimal_density_estimate(
data = new_data,
domain = domain,
penalty_param_candidates = lambda_cand,
fold_number = 5
)
hist_binwidth <- 2 * stats::IQR(new_data) / (length(new_data) ** (1/3))
plot_den_new <- plot_density(
scorematching_logconcave = result2,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = new_data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_den_new
plot_list[[paste0("add", add_pt, "unpenalized")]] <- plot_den_new
plot_new <- plot_density(
scorematching_logconcave = opt_den,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = new_data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_new
plot_list[[paste0("add", add_pt, "penalized")]] <- plot_new
# --------------------------------------------------------------------------------------------------
add_pt <- 0.05
new_data <- c(data, add_pt, -add_pt)
result2 <- lcd_scorematching(
data = new_data,
domain = domain,
penalty_param = 0,
verbose = TRUE
)
hist_binwidth <- 2 * stats::IQR(new_data) / (length(new_data) ** (1/3))
plot_den_new <- plot_density(
scorematching_logconcave = result2,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = new_data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_den_new
plot_list[[paste0("add", add_pt, "unpenalized")]] <- plot_den_new
lambda_cand <- exp(seq(-5, 1, by = 0.5))
opt_den <- cv_optimal_density_estimate(
data = new_data,
domain = domain,
penalty_param_candidates = lambda_cand,
fold_number = 5
)
plot_new <- plot_density(
scorematching_logconcave = opt_den,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = new_data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_new
plot_list[[paste0("add", add_pt, "penalized")]] <- plot_new
# --------------------------------------------------------------------------------------------------
add_pt <- 0.005
new_data <- c(data, add_pt, -add_pt)
result2 <- lcd_scorematching(
data = new_data,
domain = domain,
penalty_param = 0,
verbose = TRUE
)
hist_binwidth <- 2 * stats::IQR(new_data) / (length(new_data) ** (1/3))
plot_den_new <- plot_density(
scorematching_logconcave = result2,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = new_data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_den_new
plot_list[[paste0("add", add_pt, "unpenalized")]] <- plot_den_new
lambda_cand <- exp(seq(-5, 1, by = 0.5))
opt_den <- cv_optimal_density_estimate(
data = new_data,
domain = domain,
penalty_param_candidates = lambda_cand,
fold_number = 5
)
plot_new <- plot_density(
scorematching_logconcave = opt_den,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = new_data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_new
# --------------------------------------------------------------------------------------------------
add_pt <- 0.001
new_data <- c(data, add_pt, -add_pt)
result2 <- lcd_scorematching(
data = new_data,
domain = domain,
penalty_param = 0,
verbose = TRUE
)
hist_binwidth <- 2 * stats::IQR(new_data) / (length(new_data) ** (1/3))
plot_den_new <- plot_density(
scorematching_logconcave = result2,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = new_data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_den_new
plot_list[[paste0("add", add_pt, "unpenalized")]] <- plot_den_new
lambda_cand <- exp(seq(-5, 1, by = 0.5))
opt_den <- cv_optimal_density_estimate(
data = new_data,
domain = domain,
penalty_param_candidates = lambda_cand,
fold_number = 5
)
plot_new <- plot_density(
scorematching_logconcave = opt_den,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = new_data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_new
plot_list[[paste0("add", add_pt, "penalized")]] <- plot_new
plot_list$original + plot_list$add0.05unpenalized + plot_list$add0.01unpenalized +
plot_list$add0.005unpenalized + plot_list$add0.001unpenalized + plot_layout(nrow = 1)
plot_list$original + plot_list$add0.05penalized + plot_list$add0.01penalized +
plot_list$add0.005penalized + plot_list$add0.001penalized + plot_layout(nrow = 1)
# --------------------------------------------------------------------------------------------------
add_pt <- 0.005
new_data <- c(data, add_pt, -add_pt)
result2 <- lcd_scorematching(
data = new_data,
domain = domain,
penalty_param = 0,
verbose = TRUE
)
lambda_cand <- exp(seq(-5, 1, by = 0.5))
opt_den <- cv_optimal_density_estimate(
data = new_data,
domain = domain,
penalty_param_candidates = lambda_cand,
fold_number = 5
)
plot_new <- plot_density(
scorematching_logconcave = opt_den,
plot_domain = domain,
plot_points_cnt = 500,
plot_hist = TRUE) +
ggplot2::coord_cartesian(xlim = domain, y = y_lim) +
ggplot2::geom_histogram(
data = data.frame(x = new_data),
ggplot2::aes(x = x, y = ..density..),
binwidth = hist_binwidth,
color = "darkblue",
fill = "lightblue",
alpha = 0.2)
plot_new
plot_list[[paste0("add", add_pt, "penalized")]] <- plot_new
plot_list$original + plot_list$add0.05penalized + plot_list$add0.01penalized +
plot_list$add0.005penalized + plot_list$add0.001penalized + plot_layout(nrow = 1)
plot_list$original + plot_list$add0.05penalized + plot_list$add0.01penalized +
plot_list$add0.005penalized + plot_list$add0.005penalized + plot_layout(nrow = 1)
plot_list$original + plot_list$add0.05penalized + plot_list$add0.01penalized +
plot_list$add0.005penalized + plot_list$add0.001penalized + plot_layout(nrow = 1)
exp(x ^ 3)
ff <- function(x) {
exp(x ^ 3)
}
integrate(ff, 0, 1000)
?tryCatch
try(integrate(ff, 0, 1000))
tryCatch(integrate(ff, 0, 1000),
error = function(e) {
mm <- "REEOR"
})
tryCatch(integrate(ff, 0, 1000),
error = function(e) {
mm <<- "REEOR"
})
print(mm)
tryCatch(integrate(ff, 0, 1),
error = function(e) {
mm <<- "REEOR"
})
print(mm)
mm <<- "REEOR"
tryCatch(integrate(ff, 0, 1),
error = function(e) {
mm <<- "REEOR"
})
print(mm)
tryCatch(integrate(ff, 0, 1),
error = function(e) {
mm <<- "REEOR"
})
print(mm)
ff <- function(x) {
exp(x ^ 3)
}
tryCatch(integrate(ff, 0, 1),
error = function(e) {
mm <<- "REEOR"
})
print(mm)
ff <- function(x) {
exp(x ^ 3)
}
tryCatch(integrate(ff, 0, 1),
error = function(e) {
mm <<- "REEOR"
})
ff <- function(x) {
exp(x ^ 3)
}
tryCatch(integrate(ff, 0, 1),
error = function(e) {
mm <<- "REEOR"
})
print(mm)
installed.packages()
install.packages("tidyverse")
